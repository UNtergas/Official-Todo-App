# docker-compose-local.yml
# This file lists the containers running the services to be run on development:
# - app-dev: Runs backend process and frontend process (vite server, that serves FE files with hot module reload)
# - nginx-reverse-proxy-prod: reverse proxy forwarding the /api prefix request
#   to backend process and all other requests to frontend process (vite server)
#
# Note: The command to run BE and FE processes is DOCKER_APP_CMD which is defined in infrastructure/entrypoint.sh
# Author: Ke An Nguyen
version: '1.29.2'

services:
  app-dev:
    container_name: ${APP_DEV_CONTAINER}
    build:
      context: ..
      dockerfile_inline: |
        FROM  node:18-alpine3.16
        RUN npm install -g pnpm
    volumes:
      - "${ROOT_PROJECT}:${ROOT_PROJECT}:Z"
    command: sh -c "cd ${ROOT_PROJECT} && ${DOCKER_DEV_ENTRY_CMD}"
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
      - "8080:8080"
    user: "${DOCKER_UID}:${DOCKER_GID}"
    depends_on:
      - postgres-db

  postgres-db:
    image: postgres:14-alpine
    container_name: ${DATABASE_CONTAINER}
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    env_file:
      - "../../.env"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  nginx-reverse-proxy-dev:
    container_name: ${NGINX_REVERSE_PROXY_DEV_CONTAINER}
    image: nginx:alpine
    volumes:
      - "${NGINX_DEV}:/etc/nginx/conf.d/nginx-dev.conf:Z"
      - "${TLS_DIR}:/etc/nginx/certs"
    ports:
     - "443:443"
     - "80:80"
    depends_on:
      - app-dev

volumes:
  postgres_data:
    name: postgres_data